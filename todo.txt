Note: Sorted by order of importance

Must have - basic functionallity:
- Define virus as the whatsapp application: `ps aux | grep WhatsApp` - DONE
- find a virus by checking if name of a running proces is name of a virus - DONE
- prevent virus from doing its things - DONE

Important - must for project requirements:
    OOP:
        - Make sure that the entire project uses at least 4 OOP classes - DONE
    Networking:
        - Create a protocol for the antivirus and its server - DONE
        - Create the Antivirus Server. Becuase a socket server is required.
          The server will get notification from an attacked client and send it to all clients. - DONE
        - Add multiclient functionallity to the server. Because a multiclient server is required - DONE
        - Think about the ip the anti viruses and the clients connect to. on client VMs, the ip should not be localhost
    Operating systems:
        - Make sure that the multiclient server is using multithreading - DONE
        - Make sure that the virus detector uses the OS API to detect the virus - (DONE, I think)
    Database (use the sqlalchemy module):
        - Add to the antivirus server a database of Users
        - Implement registration and login screen in client
        - At least 4 input fields in registration
        - Add a column of sock_id in Users table
    Security:
        - Add encryption to the antivirus server-client protocol
    GUI:
        - Add "virus detected" notification to the antivirus client

Nice to have:
- Create a simple vulnerable app - DONE
- Make the vulnerable app open to the web - DONE
- Create a virus
- Create a virus server that attacks the vulnerable web app and runs the virus on the victim PC
- Add to the virus and its server command running functionallity
- Think about changing the `colored printing` to use `SocketID` object in order to implement `sock_id` more efficiently
